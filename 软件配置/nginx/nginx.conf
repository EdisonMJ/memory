user root;
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 80;
        server_tokens off;
        return 444;
    }

    server {
        listen 80;
        server_tokens off;
        server_name www.zzzzer.com zzzzer.com;
        rewrite ^/(.*)$ https://www.zzzzer.com/$1 permanent;
    }

    server {
        listen        443 ssl;
        server_name   wwww.zzzzer.com;
        # 隐藏response的server字段的nginx版本号
        server_tokens off;
        charset       utf-8;

        ssl_certificate      /home/zzzzer/Documents/sites/ssl/Nginx/1_www.zzzzer.com_bundle.crt;
        ssl_certificate_key  /home/zzzzer/Documents/sites/ssl/Nginx/2_www.zzzzer.com.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location /media {
            alias /home/zzzzer/Documents/sites/myblog/media;
        }

        location /static {
            alias /home/zzzzer/Documents/sites/myblog/static;
        }

        location / {
            # 禁止缓存
            #add_header               Cache-Control no-cache;
            
            # 这是用于识别通过HTTP代理或负载平衡器的原始IP的非rfc标准,
            # 如果有做X-Forwarded-For设置的话, 每次经过proxy转发都会有记录,
            # 格式就是client1, proxy1, proxy2,以逗号隔开各个地址,
            # 由于他是非rfc标准, 所以默认是没有的, 需要强制添加,
            # 在默认情况下经过proxy转发的请求, 在后端看来远程地址都是proxy端的ip.
            # 也就是说在默认情况下我们使用request.getAttribute("X-Forwarded-For")获取不到用户的ip, 
            # 如果我们想要通过这个变量获得用户的ip, 我们需要自己在nginx添加如下配置
            proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # 将代理头部中host字段值, 转换为真实的客户端ip
            proxy_set_header Host    $http_host;
            
            # 禁止重定向
            proxy_redirect           off;
            proxy_pass               http://unix:/tmp/zzzzer.sock;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
